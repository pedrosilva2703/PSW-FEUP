import java.sql.*;

public class ddl {
    public static void main(String[] args) throws SQLException{
        String url = "jdbc:postgresql://db.fe.up.pt/meec1a0303";
        String user = "meec1a0303";
        String password = "stockAlote20";

        Connection conn = null;
        try {
            conn = DriverManager.getConnection(url, user, password);
            System.out.println("Connected to the PostgreSQL server successfully.");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }

        Statement st = conn.createStatement();
        st.execute("SET search_path TO dba03g03");

        st.execute("CREATE TABLE IF NOT EXISTS warehouse(name_wh VARCHAR(20) NOT NULL,location VARCHAR(20) NOT NULL,m3 INT NOT NULL,CONSTRAINT PK_warehouse PRIMARY KEY (name_wh));");
        st.execute("CREATE TABLE IF NOT EXISTS section(category_section VARCHAR(20) NOT NULL,m3 INT NOT NULL,name_wh VARCHAR(20) NOT NULL,CONSTRAINT PK_section PRIMARY KEY (category_section));");
        st.execute("CREATE TABLE IF NOT EXISTS goods(id_goods INT NOT NULL,name_goods VARCHAR(20) NOT NULL,qty INT NOT NULL,weight_pu INT NOT NULL,volume_pu INT NOT NULL,fragility  BOOLEAN,category_section VARCHAR(20) NOT NULL,CONSTRAINT PK_goods PRIMARY KEY (id_goods, category_section));");
        st.execute("CREATE TABLE IF NOT EXISTS task(id_task INT NOT NULL,type_task VARCHAR(20) NOT NULL,product_name VARCHAR(20) NOT NULL,product_category VARCHAR(20) NOT NULL,qty INT NOT NULL,is_completed  BOOLEAN,start_time VARCHAR(20) NOT NULL,end_time VARCHAR(20) NOT NULL,category_section VARCHAR(20) NOT NULL,CONSTRAINT PK_task PRIMARY KEY (id_task, category_section));");
        st.execute("CREATE TABLE IF NOT EXISTS users(name VARCHAR(50),birthdate VARCHAR(10),contact VARCHAR(20),username VARCHAR(20),password VARCHAR(200),name_wh VARCHAR(20) NOT NULL,CONSTRAINT PK_users PRIMARY KEY (username));");
        st.execute("CREATE TABLE IF NOT EXISTS boss()INHERITS (users);");
        st.execute("CREATE TABLE IF NOT EXISTS employee(id_employee INT NOT NULL)INHERITS (users);");
        st.execute("CREATE TABLE IF NOT EXISTS manager(id_manager INT NOT NULL)INHERITS (users);");
        st.execute("ALTER TABLE section ADD CONSTRAINT FK_section_name_wh FOREIGN KEY (name_wh) REFERENCES warehouse (name_wh) ON DELETE NO ACTION ON UPDATE NO ACTION;");
        st.execute("ALTER TABLE goods ADD CONSTRAINT FK_goods_category_section FOREIGN KEY (category_section) REFERENCES section (category_section) ON DELETE NO ACTION ON UPDATE NO ACTION;");
        st.execute("ALTER TABLE task ADD CONSTRAINT FK_task_category_section FOREIGN KEY (category_section) REFERENCES section (category_section) ON DELETE NO ACTION ON UPDATE NO ACTION;");
        st.execute("ALTER TABLE users ADD CONSTRAINT FK_users_name_wh FOREIGN KEY (name_wh) REFERENCES warehouse (name_wh) ON DELETE NO ACTION ON UPDATE NO ACTION;");
        st.execute("ALTER TABLE boss ADD CONSTRAINT FK_boss_name_wh FOREIGN KEY (name_wh) REFERENCES warehouse (name_wh) ON DELETE NO ACTION ON UPDATE NO ACTION;");
        st.execute("ALTER TABLE employee ADD CONSTRAINT FK_employee_name_wh FOREIGN KEY (name_wh) REFERENCES warehouse (name_wh) ON DELETE NO ACTION ON UPDATE NO ACTION;");
        st.execute("ALTER TABLE manager ADD CONSTRAINT FK_manager_name_wh FOREIGN KEY (name_wh) REFERENCES warehouse (name_wh) ON DELETE NO ACTION ON UPDATE NO ACTION;");
    }
}